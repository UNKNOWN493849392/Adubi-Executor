-- Create the initial ScreenGui and Loading Screen
local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui", player.PlayerGui)
screenGui.ResetOnSpawn = false -- Prevents the ScreenGui from resetting on player respawn

-- Create the loading screen
local loadingScreen = Instance.new("Frame", screenGui)
loadingScreen.Size = UDim2.new(1, 0, 1, 0)
loadingScreen.Position = UDim2.new(0, 0, 0, 0)
loadingScreen.BackgroundColor3 = Color3.fromRGB(0, 0, 0)

-- Create loading label on the loading screen
local loadingLabel = Instance.new("TextLabel", loadingScreen)
loadingLabel.Size = UDim2.new(0.3, 0, 0.1, 0)
loadingLabel.Position = UDim2.new(0.35, 0, 0.45, 0)
loadingLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
loadingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
loadingLabel.Text = "Loading Executor"
loadingLabel.TextScaled = true
loadingLabel.TextStrokeTransparency = 0.5

-- Create a toggle button
local toggleButton = Instance.new("TextButton", screenGui)
toggleButton.Size = UDim2.new(0.1, 0, 0.05, 0)
toggleButton.Position = UDim2.new(0.45, 0, 0, 0) -- Top center
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Text = "A"
toggleButton.TextScaled = true
toggleButton.BorderSizePixel = 0
toggleButton.AutoButtonColor = false -- Prevent color change on hover/click
toggleButton.ClipsDescendants = true
toggleButton.AnchorPoint = Vector2.new(0.5, 0) -- Centered horizontally
toggleButton.ZIndex = 2
toggleButton.Visible = true

-- Make the toggle button rounded
local uicorner = Instance.new("UICorner", toggleButton)
uicorner.CornerRadius = UDim.new(0.5, 0)

-- Function to create the main UI after shrinking the loading screen
local mainUIVisible = false
local mainUI

local function createMainUI()
    -- Shrink the loading screen
    local tweenService = game:GetService("TweenService")
    local shrinkTween = tweenService:Create(loadingScreen, TweenInfo.new(1), {Size = UDim2.new(0.4, 0, 0.4, 0), Position = UDim2.new(0.6, 0, 0, 0)})
    shrinkTween:Play()
    
    -- Wait for the shrink animation to finish
    shrinkTween.Completed:Connect(function()
        -- Remove the loading screen
        loadingScreen:Destroy()

        -- Create the main UI elements
        local border = Instance.new("Frame", screenGui)
        mainUI = Instance.new("Frame", screenGui)
        local titleLabel = Instance.new("TextLabel", mainUI)
        local scriptBox = Instance.new("TextBox", mainUI)
        local executeButton = Instance.new("TextButton", mainUI)
        local infiniteButton = Instance.new("TextButton", mainUI)

        -- Set properties for the red border around the frame
        border.Size = UDim2.new(0.4, 8, 0.4, 8)
        border.Position = UDim2.new(0.6, -4, 0, -4)
        border.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        border.BorderSizePixel = 0

        -- Set properties for the main frame
        mainUI.Size = UDim2.new(0.4, 0, 0.4, 0)
        mainUI.Position = UDim2.new(0.6, 0, 0, 0)
        mainUI.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        mainUI.Visible = true

        -- Set properties for title label
        titleLabel.Size = UDim2.new(1, 0, 0.1, 0)
        titleLabel.Position = UDim2.new(0, 0, 0, 0)
        titleLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        titleLabel.Text = "Adubi"
        titleLabel.TextScaled = true
        titleLabel.TextStrokeTransparency = 0.5

        -- Set properties for script textbox
        scriptBox.Size = UDim2.new(1, 0, 0.6, 0)
        scriptBox.Position = UDim2.new(0, 0, 0.1, 0)
        scriptBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        scriptBox.Text = ""

        -- Set properties for execute button
        executeButton.Size = UDim2.new(0.3, 0, 0.1, 0)
        executeButton.Position = UDim2.new(0, 0, 0.8, 0)
        executeButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        executeButton.Text = "EXECUTE"
        executeButton.TextScaled = true
        executeButton.MouseButton1Click:Connect(function()
            local scriptContent = scriptBox.Text
            if scriptContent ~= "" then
                local func, errorMessage = loadstring(scriptContent)
                if func then
                    local success, execError = pcall(func)
                    if not success then
                        warn("Script execution error: " .. execError)
                    end
                else
                    warn("Failed to load script: " .. errorMessage)
                end
            end
        end)

        -- Set properties for infinite button
        infiniteButton.Size = UDim2.new(0.3, 0, 0.1, 0)
        infiniteButton.Position = UDim2.new(0.7, 0, 0.8, 0)
        infiniteButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        infiniteButton.Text = "Infinite Field"
        infiniteButton.TextScaled = true
        infiniteButton.MouseButton1Click:Connect(function()
            local scriptURL = "https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"
            local scriptContent = "loadstring(game:HttpGet('" .. scriptURL .. "'))()"
            local func, errorMessage = loadstring(scriptContent)
            if func then
                local success, execError = pcall(func)
                if not success then
                    warn("Script execution error: " .. execError)
                end
            else
                warn("Failed to load script: " .. errorMessage)
            end
        end)

        -- Frame dragging functionality
        local dragging = false
        local dragInput, dragStart, startPos

        local function updateInput(input)
            local delta = input.Position - dragStart
            mainUI.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            border.Position = mainUI.Position - UDim2.new(0, 4, 0, 4)
        end

        mainUI.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                dragStart = input.Position
                startPos = mainUI.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)

        mainUI.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement then
                dragInput = input
            end
        end)

        game:GetService("UserInputService").InputChanged:Connect(function(input)
            if dragging and input == dragInput then
                updateInput(input)
            end
        end)

        -- Toggle visibility with button
        toggleButton.MouseButton1Click:Connect(function()
            mainUI.Visible = not mainUI.Visible
            border.Visible = mainUI.Visible
        end)
    end)
end

-- Delay the creation of the main UI by 5 seconds, then shrink and load
wait(5)
createMainUI()

-- Button protection - Prevent the toggle button from being deleted
toggleButton.AncestryChanged:Connect(function()
    if not toggleButton:IsDescendantOf(game) then
        toggleButton.Parent = screenGui
    end
end)
